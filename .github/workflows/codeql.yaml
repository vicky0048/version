name: version
##############

on: 
  workflow_dispatch:
  #push:
  #  branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    #env:
    #  JFROG_REPO_URL: https://vicky12345.jfrog.io/artifactory/mavan-repo/dev/arvhive/
      #ARTIFACT_PATH: mavan-repo/$(cat snapshot.txt)/
    #  JFROG_REPOSITORY: mavan-repo/dev/arvhive
      
    
    strategy:
      fail-fast: false
      matrix:
        # Override automatic language detection by changing the below list
        # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
        language: ['java']
    
    steps:
    #- name: Get latest artifact version
    #  id: get_artifact_version
    #  run: |
    #     current_version=$(curl -s -u ${{ secrets.JF_USER }}:${{ secrets.JF_PASSWORD }} "https://vicky12345.jfrog.io/artifactory/api/storage/mavan-repo/0.0.1/?lastModified" | jq '.uri' | awk -F'[/"]' '{ print $(NF-1); }' | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
    #     #res1=echo $(curl -s -u ${{ secrets.JF_USER }}:${{ secrets.JF_PASSWORD }} "https://vicky12345.jfrog.io/artifactory/api/storage/mavan-repo/0.0.1/?lastModified") | jq '.uri' | awk -F'[/"]' '{ print $(NF-1); }' | grep -oE '[0-9]+\.[0-9]+\.[0-9]+'
    #     echo $current_version
    #     new_version=$(echo $current_version | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
    #     echo $new_version > version.txt
    #     echo $(cat version.txt)
    #     pwd
    #     ls -lrth
        
      
   
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: 11
         
    
    - name: Build with Maven
      run: mvn clean install
    
    - name: Get versions
      run: mvn help:evaluate -Dexpression=project.version

    - name: Get release version
      run: mvn help:evaluate -Dexpression=project.version | grep -v SNAPSHOT
      id: release-version

    - name: Get snapshot version
      run: mvn help:evaluate -Dexpression=project.version | grep SNAPSHOT
      id: snapshot-version  
    
   # - name: create directory
   #   run: mkdir -p target/$R1
      
    - name: Get snapshot version
      run: |
         echo $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | grep SNAPSHOT|  sed 's/-SNAPSHOT//') > snapshot.txt 

      
    - name: print snapshot version
      run: |
        pwd
        ls -lrth
        curl -X PUT -u ${{ secrets.JF_USER }}:${{ secrets.JF_PASSWORD }} https://vicky12345.jfrog.io/artifactory/mavan-repo/dev/archive/
        current_version=$(curl -s -u ${{ secrets.JF_USER }}:${{ secrets.JF_PASSWORD }} "https://vicky12345.jfrog.io/artifactory/api/storage/mavan-repo/dev/archive/?lastModified")
        echo "$current_version"
        current_version_new=$(echo "$current_version" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | cut -d"." -f1)
        snapshot_new=$(echo "$(cat snapshot.txt)" | cut -d"." -f1)
        echo "$current_version_new"
        echo "$snapshot_new"
        
        
      
      
  
        
        
        
        
        
        
